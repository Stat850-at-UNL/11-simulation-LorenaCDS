---
title: "Craps Simulation"
format: html
---


In this document, you should create, code, and demonstrate each function you described in [`pseudocode.qmd`](pseudocode.qmd).
File your functions under the appropriate header. 
Each function should have its own code chunk, which is properly set up with the appropriate programming language indicated.
I have provided skeleton code chunks for your required functions using R syntax, but you are free to use Python or any other language covered in class. 
Please delete or fill in my chunks with your own code.

Make sure this document compiles before you submit your answers.

# Helper Functions

## `roll_dice`

```{r}
roll_dice <- function() {
  # Input: None
  # Output: Integer from 2 to 12 (sum of two dice)
  sum(sample(1:6, 2, replace = TRUE))
}

```

```{r}
roll_dice()
```



# Main Functions

## `simulate_craps_game`
```{r}
simulate_craps_game <- function() {
  # First roll
  point <- roll_dice()
  
  # Check for win/loss
  if (point == 7 || point == 11) {
    return(TRUE)
  } else if (point == 2 || point == 3 || point == 12) {
    return(FALSE)
  } else {
    #  Keep rolling until point or 7 is rolled
    while (TRUE) {
      roll <- roll_dice()
      if (roll == point) {
        return(TRUE)  
      } else if (roll == 7) {
        return(FALSE) 
      }
    }
  }
}

```

```{r}
simulate_craps_game()
```

## `summarize_craps_game`
```{r}
# Load the necessary library
library(dplyr)

# Updated summarize_craps_game function
summarize_craps_game <- function(result) {
  total_games <- length(result)
  total_wins <- sum(result)
  win_rate <- total_wins / total_games
  
  data.frame(
    Total_Games = total_games,
    Wins = total_wins,
    Losses = total_games - total_wins,
    Win_Rate = win_rate
  )
}

```

```{r}

simulate_craps_game() %>% summarize_craps_game()
```

## `run_craps_simulation`
```{r}
run_craps_simulation <- function(N) {
  # Input: Number of games to simulate
  # Output: Summary of game results
  
  results <- replicate(N, simulate_craps_game())
  summarize_craps_game(results)
}


set.seed(123)


```

```{r}
result <- run_craps_simulation(N=5) # demonstrate result
result
```

